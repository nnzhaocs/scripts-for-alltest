From 7853059a3e60f05048685941b7eb13dc8da16a69 Mon Sep 17 00:00:00 2001
From: Nannan Zhao <nannanzhao@nannans-mbp.almaden.ibm.com>
Date: Wed, 28 Jun 2017 13:15:51 -0700
Subject: [PATCH] fixing undefined6

---
 down_loader.go       | 45 ++++++++++++++++++++++++++++++++++++++++++---
 registry/manifest.go | 28 ++++++++++++++--------------
 2 files changed, 56 insertions(+), 17 deletions(-)

diff --git a/down_loader.go b/down_loader.go
index 9f36288..90ebc00 100644
--- a/down_loader.go
+++ b/down_loader.go
@@ -16,6 +16,8 @@ import (
 	"io"
 	//"os"
 	"flag"
+	"net/http"
+	"strings"
 )
 
 func registry_init() (*registry.Registry, error){
@@ -44,7 +46,7 @@ func docker_download(input_op string, input_repo string, input_tag string, input
 		return nil
 	case "download_manifest":
 		manifest, _ := get_manifest(hub, repo_name, repo_tag)
-		return manifest
+		printResponse(manifest)
 	}
 
 	return nil
@@ -79,6 +81,43 @@ func get_blobs(hub *registry.Registry, repo_name string, blob_digest string, abs
 	return nil
 }
 
+func printResponse(resp *http.Response) string{
+	var response []string
+
+	bs, err := ioutil.ReadAll(resp.Body)
+	if err != nil{
+		//	return  nil
+	}
+	rdr1 := ioutil.NopCloser(bytes.NewBuffer(bs))
+	rdr2 := ioutil.NopCloser(bytes.NewBuffer(bs))
+	//doStuff(rdr1)
+	resp.Body = rdr2
+	defer resp.Body.Close()
+
+	buf1 := new(bytes.Buffer)
+	buf1.ReadFrom(rdr1)
+	tr := buf1.String()
+
+	//tr := string(rdr1)
+	//buf1 := new(bytes.Buffer)
+	//buf1.ReadFrom(resp.Body)
+	//bs1 := buf1.String()
+
+	response = append(response, fmt.Sprintf("%v", tr))
+
+	//// Loop through headers
+	//for name, headers := range resp.Header {
+	//	name = strings.ToLower(name)
+	//	for _, h := range headers {
+	//		response = append(response, fmt.Sprintf("%v: %v", name, h))
+	//	}
+	//}
+
+	//logrus.Debugf("PingV2Registry: http.NewRequest: GET %s body:nil", endpointStr)
+
+	return strings.Join(response, "\n")
+}
+
 func storeBlob(absFileName string, resp io.ReadCloser) error {
 
 	registry.Log("start storeBlob")
@@ -112,10 +151,10 @@ func main() {
 	fmt.Println("dirname:", *input_dir)
 	fmt.Println("operation:", *input_op)
 
+	docker_download(*input_op, *input_filename, "latest", *input_dir)
+
 	//open the file
 	//if file, err := os.Open()
-
-
 }
 
 
diff --git a/registry/manifest.go b/registry/manifest.go
index 6f463a7..4f8daba 100644
--- a/registry/manifest.go
+++ b/registry/manifest.go
@@ -40,7 +40,7 @@ func (registry *Registry) Manifest(repository, reference string) (*manifestV1.Si
 	return signedManifest, nil
 }
 
-func (registry *Registry) ManifestV2(repository, reference string) (*manifestV2.DeserializedManifest, error) {
+func (registry *Registry) ManifestV2(repository, reference string) (*http.Response, error) {
 	url := registry.url("/v2/%s/manifests/%s", repository, reference)
 	registry.Logf("registry.manifest.get url=%s repository=%s reference=%s", url, repository, reference)
 
@@ -54,19 +54,19 @@ func (registry *Registry) ManifestV2(repository, reference string) (*manifestV2.
 	if err != nil {
 		return nil, err
 	}
-
-	defer resp.Body.Close()
-	body, err := ioutil.ReadAll(resp.Body)
-	if err != nil {
-		return nil, err
-	}
-
-	deserialized := &manifestV2.DeserializedManifest{}
-	err = deserialized.UnmarshalJSON(body)
-	if err != nil {
-		return nil, err
-	}
-	return deserialized, nil
+	return resp, err
+	//defer resp.Body.Close()
+	//body, err := ioutil.ReadAll(resp.Body)
+	//if err != nil {
+	//	return nil, err
+	//}
+	//
+	//deserialized := &manifestV2.DeserializedManifest{}
+	//err = deserialized.UnmarshalJSON(body)
+	//if err != nil {
+	//	return nil, err
+	//}
+	//return deserialized, nil
 }
 
 func (registry *Registry) ManifestDigest(repository, reference string) (digest.Digest, error) {
-- 
2.11.0 (Apple Git-81)

